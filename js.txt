1.JS的输出4种方法
  window.alert()弹出警告框
  document.write()将内容写到html内容中
  innerHTML写入html元素中
  Console.log写入浏览器的控制台
2.JS语法
   数字Number 3.14  4500 123e5。
   字符串String  "Hello World" 'Hello World'。
   布尔（逻辑）只能有两个值：true 或 false。
   null和undefined
   变量 var a = "name" 对大小写敏感
   数组Array  [40, 100, 1, 5, 25, 10],js中数组类似于java中的map容器 长度可以任意改变，元素类型任意
   var result = arr.push(1,2,true) push方法向数组追加元素，返回新数组的长度，arr.pop从数组尾部移除一个值，返回移除的元素，
   arr.shift()从头部移除一个元素，arr.unshift(10,false)从头部插入2个元素，返回的新数组的长度
   arr.splice(1,2,3,4,5)从第一位截取2位，然后添加后面参数，var str = arr.slice(2,4) 从数组截取从第2位截取2，3两位，slice不改变数组本身
   var result = arr1.concat(arr2),result合并两个数组，但是不操作数组本身，arr.join('-')在数组每个元素中加入，不操作数组本身
   arr.sort()按照字符串码排序，arr.reverse()按照数值位置倒序排序，中间可以加比较方法  arr.sort(compare)和arr.reverse(compare)
   function compare(value1,value2){
        if(value1<value2){
          return 1;
        }else if((value1>value2)){
          return -1;
        }else{
          return 0;
        }
      }
    var index = arr.index(2,2)从第二位查值为2的位置，值是通过===比较，没有转换ture<>1；arr.lastIndexOf();
   对象Object  {name:"jack",age:25}
   Global 全局的，终极的对象(不存在)
   eval(String)方法 无形的JavaScript解析器
   isNaN(number) not a number，自己不等于自己
   JavaScript把null、undefined、0、NaN和空字符串''视为false，其他值一概视为true，因此上述代码条件判断的结果是true。
   if(a===undefined) a = [] <===> a=a||[] (习惯写法)
3.JS函数
   函数也是一种类型，函数可以当做一种数据类型来传递
   三种函数定义方式-function语句形式 函数直接量形式  通过function构造函数去定义
   fn.length 形参的个数，arguments函数的参数数组，arguments.callee指的函数本身，多用于递归操作
   this对象是在运行时基于执行环境所绑定的，this总是指向调用者，谁调用指向谁
   call，apply扩充函数的作用域，这样对象不需要和方法有耦合关系 函数大写对应一个对象
   JS没有块级作用域
   闭包：一个函数可以访问另外一个函数的作用域的变量

4.面向对象


5.web浏览器

